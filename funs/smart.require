# -*- makefile-gmake -*-
#
#    Copyright (C) 2012, Duzy Chan <code@duzy.info>
#    All rights reserved.
#
#####################################################
#
#  smart.require - Load a subdir under SRCDIR.
#  
#  @param: name
#
$(smart.internal)

ifndef @name
  smart~error := @name is undefined
else

ifndef smart.scripts.$(@name)
  smart~error := no script for "$(@name) (by $(NAME), $(SCRIPT))"
else

smart~names := $(filter-out \
  SCRIPT NAME SRCDIR SUBDIRS REQUIRES PROGRAM LIBRARY,\
  $(smart.context.names))

#$(warning info: "$(NAME)" requires "$(@name), $(smart.scripts.$(@name))")
#$(warning info: EXPORTS: $(filter smart.context.EXPORT.%-$(smart.scripts.$(@name)),$(.VARIABLES)))
#$(warning info: EXPORTS: $(filter smart.context.EXPORT.%,$(.VARIABLES)))

define smart~require
$(eval \
  ifdef smart.context.EXPORT.$(smart~name)-$(smart~script)
    $(smart~name) += $(smart.context.EXPORT.$(smart~name)-$(smart~script))
  endif
 )
endef #smart~require

#$$(warning $(NAME), $(@name), $(smart~name), $(smart.context.EXPORT.$(smart~name)-$(smart~script)))

#module-$(SCRIPT): module-$(smart.context.SCRIPT-$(smart.scripts.$(@name)))

$(foreach smart~script,$(smart.scripts.$(@name)),\
  $(foreach smart~name,$(smart~names),$(smart~require)))

$(foreach smart~script,$(smart.scripts.$(@name)),\
  $(foreach @name, $(smart.context.REQUIRES-$(smart~script)),\
    $(eval include $(smart.root)/funs/smart.require)))

endif #smart.scripts.$(@name)
endif #@name

smart~require :=
smart~names :=
smart~name :=
